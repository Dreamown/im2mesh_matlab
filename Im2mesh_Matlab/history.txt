

Fix the issue of failing to delete redundant vertex.
Fix the crash issue of function bounds2meshBuiltIn.
Fix bugs related to function bound2SurfaceLoop and function printMsh.

Improve the workflow when using Gmsh as mesh generator.
Function printInp2d is now able to export node set automatically.

Function poly2meshBuiltIn is deprecated. Please use function bounds2meshBuiltIn instead.
Function printGeo is deprecated. Please use function bounds2geo instead.

Function bounds2mesh - Revise the default value and valid range of parameter 'opt.bound_size'. New default value: 0. Uniform mesh seed will be added to boundary when opt.bound_size > 0.
Function bounds2mesh - add parameter opt.hinitial. It's used to avoid atrraction issue when specifying mesh size at multiple points.
Function plotMeshes - add the 4-th parameter to setup colormap when plotting mesh.



New function:
bounds2meshBuiltIn
extractMsh
bounds2geo

Update:
demo03, 11, 13, 14, 17, 18

Revise:
Function smoothBounds - thresh_num_vert can be interval






Need to
Revise:
% clear up redundant vertices
% only control points and knick-points will remain
bounds = getCtrlPnts( bounds );
bounds = simplifyBounds( bounds, tol/2, threshold );
app.boundsSimpfied = bounds;
->
% clear up redundant vertices
% only control points and knick-points will remain
bounds = getCtrlPnts( bounds );
bounds = simplifyBounds( bounds, tol/2, threshold );
bounds = simplifyBounds( bounds, 0 );
app.boundsSimpfied = bounds;












% convert to a cell array of polyshapes
psCell = bound2polyshape(bounds);

figure
hold on; axis equal;
for i = 1: length(psCell)
    plot( psCell{i} );
end
hold off


    opt.sizeMin = 0.1;
    opt.sizeMax = 500;
    opt.algthm = 6;
    opt.recombAll = 0;
    opt.recombAlgthm = 3;
    opt.eleOrder = 1;
    opt.scalingFactor = 1;
    opt.num_split = 0;

    opt.grad_mode = 0;
    opt.sizeAtBound = 500;
    opt.sizeSlope = 0.2;
    
    opt.local_max = [];
    opt.pnt_size = [];
    opt.interior_poly = {};
    opt.hinitial = [];

    opt.tf_includeMesh = true;








---------------------
bounds2mesh
% ---------------------------------------------------------------------
% Check min edge length. If smaller than threshold, show warning.

p1 = node(edge(:,1), :);
p2 = node(edge(:,2), :);

% Euclidean length of every edge
edgeLen = hypot( p1(:,1)-p2(:,1), p1(:,2)-p2(:,2) );
minLen = min(edgeLen);

threshold = 0.05;
if minLen < threshold
	warning( '\n%s\n%s\n%s\n%', ...
	'Edge length smaller than 0.05 is detected in the input geometry.', ...
	'Some boundary nodes may lose due to numerical roundoff error.', ...
	'Please check the mesh visually to confirm there is no distortion in the geometry.');
end

% Note:
% The issue of roundoff error occur occasionaly on my pc. Nonconsitent.
% Wierd. Maybe it is caused instability of my pc.